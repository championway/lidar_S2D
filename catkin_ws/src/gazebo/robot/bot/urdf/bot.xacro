<?xml version='1.0'?>
<robot name="bot" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:arg name="veh" default="$(arg veh)"/>
  <xacro:property name="M_PI" value="3.14159"/>
  
  

  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <legacyMode>false</legacyMode>
      <alwaysOn>true</alwaysOn>
      <updateRate>10</updateRate>
      <leftJoint>lwheel_joint</leftJoint>
      <rightJoint>rwheel_joint</rightJoint>
      <wheelSeparation>0.4</wheelSeparation>
      <wheelDiameter>0.2</wheelDiameter>
      <torque>10</torque>
      <commandTopic>$(arg veh)/cmd_vel</commandTopic>
      <odometryTopic>$(arg veh)/odom</odometryTopic>
      <odometryFrame>gazebo</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="p3d_plugin" filename="libgazebo_ros_p3d.so">
    <bodyName>base_link</bodyName>
    <frameName>world</frameName>
    <!--How to define an empty string in xacro?-->
    <!--<robotNamespace>""</robotNamespace>-->
    <updateRate>10.0</updateRate>
    <topicName>p3d_odom</topicName>
    <xyzOffset>0 0 0</xyzOffset>
    <rpyOffset>0 0 0</rpyOffset>
    <gaussianNoise>0</gaussianNoise>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="gps_plugin" filename="libhector_gazebo_ros_gps.so">
    <updateRate>1.0</updateRate>
    <alwaysOn>true</alwaysOn>
    <bodyName>base_link</bodyName>
    <frameId>base_link</frameId>
    <topicName>gps/fix</topicName>
    <velocityTopicName>fix_velocity</velocityTopicName>

    <referenceLatitude>24.788522</referenceLatitude>
    <referenceLongitude>121.000296</referenceLongitude>
    <referenceAltitude>10.0</referenceAltitude>

    <offset>0.0 0.0 0.0</offset>
    <drift>0.0 0.0 0.0</drift>
    <gaussianNoise>0.1 0.1 0.1</gaussianNoise>

    <velocityOffset>0.0 0.0 0.0</velocityOffset>
    <velocityDrift>0.0 0.0 0.0</velocityDrift>
    <velocityGaussianNoise>0.0 0.0 0.0</velocityGaussianNoise>
      </plugin>
  </gazebo>

  <gazebo>
    <plugin name="imu_plugin" filename="libhector_gazebo_ros_imu.so">
      <updateRate>10.0</updateRate>
      <bodyName>base_link</bodyName>
      <topicName>imu/data</topicName>
      <serviceName>imu_service</serviceName>
      <frame_id>base_link</frame_id>
      <alwaysOn>true</alwaysOn>

      <accelOffset>0.0 0.0 0.0</accelOffset>
      <accelDrift>0.0 0.0 0.0</accelDrift>
      <accelDriftFrequency>0.00027 0.00027 0.000027</accelDriftFrequency>
      <accelGaussianNoise>0.0 0.0 0.0</accelGaussianNoise>

      <rateOffset>0.0 0.0 0.0</rateOffset>
      <rateDrift>0.0 0.0 0.0</rateDrift>
      <rateDriftFrequency>0.00027 0.00027 0.000027</rateDriftFrequency>
      <rateGaussianNoise>0.0 0.0 0.0</rateGaussianNoise>

      <yawOffset>0.0</yawOffset>
      <yawDrift>0.0</yawDrift>
      <yawDriftFrequency>0.00027</yawDriftFrequency>
      <yawGaussianNoise>0.0</yawGaussianNoise>

    </plugin>
  </gazebo>

  <!--gazebo reference="camera">
    <material>Gazebo/Blue</material>
    <sensor name="camera_1" type="camera">
      <update_rate>30</update_rate>
      <camera name="head">
        <horizontal_fov>1.7</horizontal_fov>
        <image>
          <width>1920</width>
          <height>1440</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>200</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>$(arg veh)/front/camera_node</cameraName>
        <imageTopicName>image/raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera</frameName>
        <hackBaseline>0.07</hackBaseline>
      </plugin>
    </sensor>
  </gazebo-->

  <link
    name="base_link">
    <inertial>
      <origin
        xyz="-0.0101024393214371 2.77555756156289E-17 -0.00724903839291099"
        rpy="0 0 0" />
      <mass
        value="22.4144467859455" /> <!--0.224144467859455-->
      <inertia
        ixx="0.0262333315558155"  
        ixy="-9.46739929586217E-20" 
        ixz="1.25847877839234E-05"
        iyy="0.0594458638144052"
        iyz="3.28272538130837E-20"
        izz="0.0839695132659337" /><!--xx yy zz*100-->
    </inertial>
    <visual>
      <ori
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://bot/meshes/base_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.792156862745098 0.819607843137255 0.933333333333333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://bot/meshes/base_link.STL" />
      </geometry>
    </collision>
  </link>
  <link
    name="lwheel_link">
    <inertial>
      <origin
        xyz="0 -0.01 1.38777878078145E-17"
        rpy="0 0 0" />
      <mass
        value="5.57789775644867" /> <!--0.055778977-->
      <inertia
        ixx="145.803923229503E-05"
        ixy="-1.99984150579823E-21"
        ixz="1.05546145898492E-21"
        iyy="254.421861416015E-05"
        iyz="-3.05243290373849E-21"
        izz="145.803923229503E-05" /> <!--xx yy zz*100-->
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://bot/meshes/lwheel_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.792156862745098 0.819607843137255 0.933333333333333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://bot/meshes/lwheel_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="lwheel_joint"
    type="continuous">
    <origin
      xyz="0.037 0.076 -0.02"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="lwheel_link" />
    <axis
      xyz="0 1 0" />
  </joint>
  <link
    name="rwheel_link">
    <inertial>
      <origin
        xyz="0 0.01 1.38777878078145E-17"
        rpy="0 0 0" />
      <mass
        value="5.57789775644868" />  <!--0.055778977-->
      <inertia
        ixx="145.803923229503E-05"
        ixy="4.60062935577484E-21"
        ixz="-6.46471806336693E-23"
        iyy="254.421861416015E-05"
        iyz="-3.87738072626345E-21"
        izz="145.803923229503E-05" /> 
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://bot/meshes/rwheel_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.792156862745098 0.819607843137255 0.933333333333333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://bot/meshes/rwheel_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="rwheel_joint"
    type="continuous">
    <origin
      xyz="0.037 -0.076 -0.02"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="rwheel_link" />
    <axis
      xyz="0 1 0" />
  </joint>
  <link
    name="wheelconnect_link">
    <inertial>
      <origin
        xyz="1.50048594515827E-05 0 -0.010847034957063"
        rpy="0 0 0" />
      <mass
        value="0.913938040025901" /> <!--0.009139380-->
      <inertia
        ixx="160.355093188034E-06"
        ixy="-7.73413872737081E-23"
        ixz="1.58787191951214E-09"
        iyy="110.422623295413E-06"
        iyz="1.24825890806269E-22"
        izz="179.481242782248E-06" /> <!--xx yy zz*100-->
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://bot/meshes/wheelconnect_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.792156862745098 0.819607843137255 0.933333333333333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://bot/meshes/wheelconnect_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="connect_joint"
    type="continuous">
    <origin
      xyz="-0.087 0 -0.021"
      rpy="-5.39137043987863E-16 -2.12238359091467E-18 -0.00393661064679745" />
    <parent
      link="base_link" />
    <child
      link="wheelconnect_link" />
    <axis
      xyz="0 0 1" />
  </joint>
  <link
    name="swheel_link">
    <inertial>
      <origin
        xyz="-2.16840434497101E-18 -0.00500000000000003 0"
        rpy="0 0 0" />
      <mass
        value="0.31101767270539" />  <!--0.00311017-->
      <inertia
        ixx="104.450101750227E-07"
        ixy="-2.25665210862123E-23"
        ixz="-1.86856433439062E-23"
        iyy="157.063924716222E-07"
        iyz="5.78702483149728E-23"
        izz="104.450101750227E-07" />   <!--xx yy zz*100-->
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://bot/meshes/swheel_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.792156862745098 0.819607843137255 0.933333333333333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://bot/meshes/swheel_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="swheel_joint"
    type="continuous">
    <origin
      xyz="-0.00500000000000001 0.005 -0.019"
      rpy="-9.86076131526265E-32 0 5.8113236445223E-17" />
    <parent
      link="wheelconnect_link" />
    <child
      link="swheel_link" />
    <axis
      xyz="0 -1 0" />
  </joint>
  <!--link name="camera">
    <collision>
      <origin rpy="0 0.1 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.02 0.02 0.02"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.02 0.02 0.02"/>
      </geometry>
    </visual>
    <inertial>
      <mass value="0.01"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <box_inertia m="0.1" x="0.02" y="0.02" z="0.02"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <joint name="camera_joint" type="fixed">
    <axis xyz="0 0 0"/>
    <origin rpy="0 0.9 0" xyz=".52 0 .1"/>
    <parent link="base_link"/>
    <child link="camera"/>
  </joint-->


  <!-- The VLP LIDAR xacro & dae source cloned from velodyne_simulator -->
  <!-- https://bitbucket.org/DataspeedInc/velodyne_simulator/overview -->
  <xacro:if value="true">
    <xacro:include filename="$(find robot_sensors)/urdf/VLP-16.urdf.xacro"/>
    <xacro:VLP-16   parent="base_link" 
                    name="velodyne_16" 
                    topic="/velodyne_points_16" 
                    hz="10" 
                    samples="1875"
                    min_range="0.5" 
                    max_range="100.0"
                    noise="0.01"
                    gpu="true">
      <origin xyz="0.1 0 0.3" rpy="0 0 0" />
    </xacro:VLP-16>
  </xacro:if>

  <xacro:if value="true">
    <xacro:include filename="$(find robot_sensors)/urdf/HDL-32E.urdf.xacro" />
    <xacro:HDL-32E  parent="base_link" 
                    name="velodyne_32" 
                    topic="/velodyne_points_32" 
                    hz="10" 
                    samples="2187" 
                    min_range="0.5" 
                    max_range="100.0"
                    noise="0.01"
                    gpu="true">
        <origin xyz="0.1 0 0.15" rpy="0 0 -1.57" />
    </xacro:HDL-32E>
  </xacro:if>


  <xacro:if value="true">
  <xacro:include filename="$(find robot_sensors)/urdf/rgbd_camera.xacro"/>
    <xacro:rgbd_camera  name="rgbd" 
                        width="512" 
                        height="512" 
                        update_rate="20"
                        min_distance="0.5"
                        max_distance="100.0"
                        pointCloudCutoff="0.5"
                        pointCloudCutoffMax="100.0"/>
    <joint name="rgbd_camera_mount_joint" type="fixed">
      <origin xyz="0.1 0 0.42" rpy="0 0.0 0"/>
      <parent link="base_link"/>
      <child link="rgbd_link"/>
    </joint>
  </xacro:if>

</robot>